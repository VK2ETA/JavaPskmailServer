/*
 * 
 * Copyright (C) 2011 PÃ¤r Crusefalk (SM0RWO)
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 * 
 */

/*
 * AddressEdit.java
 *
 * Created on 2011-okt-25, 21:56:41
 */
package javapskmail;

/**
 *
 * @author per
 */
public class AddressEdit extends javax.swing.JDialog {

    private contact myContact;          // Holds the edited contact
    private boolean exitstatus=false;   // Shows if the window was closed using ok or cancel
    
    /** Creates new form AddressEdit */
    public AddressEdit(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        pBottom = new javax.swing.JPanel();
        bCancel = new javax.swing.JButton();
        bOk = new javax.swing.JButton();
        pMain = new javax.swing.JPanel();
        lblFirstName = new javax.swing.JLabel();
        lblLastName = new javax.swing.JLabel();
        lblNickname = new javax.swing.JLabel();
        lblEmail = new javax.swing.JLabel();
        txtFirstName = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        txtLastName = new javax.swing.JTextField();
        txtNickname = new javax.swing.JTextField();
        txtEmail = new javax.swing.JTextField();
        txtHamCallsign = new javax.swing.JTextField();
        lblOtherCall = new javax.swing.JLabel();
        txtOtherCallsign = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtNotes = new javax.swing.JTextField();
        txtPhone = new javax.swing.JTextField();
        txtMobile = new javax.swing.JTextField();
        txtMMSI = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(402, 232));
        getContentPane().setLayout(new java.awt.GridBagLayout());

        pBottom.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("javapskmail/Bundle"); // NOI18N
        bCancel.setText(bundle.getString("AddressEdit.bCancel.text")); // NOI18N
        bCancel.setMaximumSize(new java.awt.Dimension(90, 30));
        bCancel.setMinimumSize(new java.awt.Dimension(70, 30));
        bCancel.setPreferredSize(new java.awt.Dimension(80, 30));
        bCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bCancelActionPerformed(evt);
            }
        });
        pBottom.add(bCancel);

        bOk.setText(bundle.getString("AddressEdit.bOk.text")); // NOI18N
        bOk.setMaximumSize(new java.awt.Dimension(90, 30));
        bOk.setPreferredSize(new java.awt.Dimension(80, 30));
        bOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bOkActionPerformed(evt);
            }
        });
        pBottom.add(bOk);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTHEAST;
        gridBagConstraints.weightx = 0.1;
        getContentPane().add(pBottom, gridBagConstraints);

        pMain.setLayout(new java.awt.GridBagLayout());

        lblFirstName.setText(bundle.getString("AddressEdit.lblFirstName.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 3);
        pMain.add(lblFirstName, gridBagConstraints);

        lblLastName.setText(bundle.getString("AddressEdit.lblLastName.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 2);
        pMain.add(lblLastName, gridBagConstraints);

        lblNickname.setText(bundle.getString("AddressEdit.lblNickname.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 3);
        pMain.add(lblNickname, gridBagConstraints);

        lblEmail.setText(bundle.getString("AddressEdit.lblEmail.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 3);
        pMain.add(lblEmail, gridBagConstraints);

        txtFirstName.setMinimumSize(new java.awt.Dimension(100, 28));
        txtFirstName.setPreferredSize(new java.awt.Dimension(120, 28));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(1, 2, 1, 0);
        pMain.add(txtFirstName, gridBagConstraints);

        jLabel1.setText(bundle.getString("AddressEdit.jLabel1.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 3);
        pMain.add(jLabel1, gridBagConstraints);

        txtLastName.setMinimumSize(new java.awt.Dimension(100, 28));
        txtLastName.setPreferredSize(new java.awt.Dimension(120, 28));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(1, 2, 1, 0);
        pMain.add(txtLastName, gridBagConstraints);

        txtNickname.setMinimumSize(new java.awt.Dimension(100, 28));
        txtNickname.setPreferredSize(new java.awt.Dimension(120, 28));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(1, 2, 1, 0);
        pMain.add(txtNickname, gridBagConstraints);

        txtEmail.setPreferredSize(new java.awt.Dimension(90, 28));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(1, 2, 1, 0);
        pMain.add(txtEmail, gridBagConstraints);

        txtHamCallsign.setMinimumSize(new java.awt.Dimension(100, 28));
        txtHamCallsign.setPreferredSize(new java.awt.Dimension(120, 28));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(1, 2, 1, 0);
        pMain.add(txtHamCallsign, gridBagConstraints);

        lblOtherCall.setText(bundle.getString("AddressEdit.lblOtherCall.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 2);
        pMain.add(lblOtherCall, gridBagConstraints);

        txtOtherCallsign.setMinimumSize(new java.awt.Dimension(100, 28));
        txtOtherCallsign.setPreferredSize(new java.awt.Dimension(120, 28));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(1, 2, 1, 0);
        pMain.add(txtOtherCallsign, gridBagConstraints);

        jLabel2.setText(bundle.getString("AddressEdit.jLabel2.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 3);
        pMain.add(jLabel2, gridBagConstraints);

        jLabel3.setText(bundle.getString("AddressEdit.jLabel3.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 2);
        pMain.add(jLabel3, gridBagConstraints);

        jLabel4.setText(bundle.getString("AddressEdit.jLabel4.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 2);
        pMain.add(jLabel4, gridBagConstraints);

        jLabel6.setText(bundle.getString("AddressEdit.jLabel6.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 3);
        pMain.add(jLabel6, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(1, 2, 1, 0);
        pMain.add(txtNotes, gridBagConstraints);

        txtPhone.setMinimumSize(new java.awt.Dimension(100, 28));
        txtPhone.setPreferredSize(new java.awt.Dimension(120, 28));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(1, 2, 1, 0);
        pMain.add(txtPhone, gridBagConstraints);

        txtMobile.setMinimumSize(new java.awt.Dimension(100, 28));
        txtMobile.setPreferredSize(new java.awt.Dimension(120, 28));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(1, 2, 1, 0);
        pMain.add(txtMobile, gridBagConstraints);

        txtMMSI.setMinimumSize(new java.awt.Dimension(100, 28));
        txtMMSI.setPreferredSize(new java.awt.Dimension(120, 28));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(1, 2, 1, 0);
        pMain.add(txtMMSI, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        getContentPane().add(pMain, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Ok was selected, save and close
     * @param evt 
     */
    private void bOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bOkActionPerformed
        this.UpdateContactObject();
        this.exitstatus = true;
        this.setVisible(false);
    }//GEN-LAST:event_bOkActionPerformed

    /**
     * Cancel was selected, indicate that and hide the window
     * @param evt 
     */
    private void bCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bCancelActionPerformed
        // Close but do not save
        this.exitstatus = false;
        this.setVisible(false);
    }//GEN-LAST:event_bCancelActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddressEdit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddressEdit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddressEdit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddressEdit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                AddressEdit dialog = new AddressEdit(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    
    /**
     * Display the contact details, if its a new contact then its of course empty
     */
    private void DisplayContact(){
        try {
            // Kids, only try this if there is an object to show
            if (myContact != null) {
                this.txtFirstName.setText(myContact.getFirstName().toString());
                this.txtLastName.setText(myContact.getLastName().toString());
                this.txtEmail.setText(myContact.getEmail().toString());
                this.txtHamCallsign.setText(myContact.getHamCallsign().toString());
                this.txtNickname.setText(myContact.getNickname().toString());
                this.txtNotes.setText(myContact.getNotes().toString());
                this.txtMobile.setText(myContact.getMobilePhone().toString());
                this.txtPhone.setText(myContact.getPhone().toString());
                this.txtOtherCallsign.setText(myContact.getOtherCallsign().toString());
                this.txtMMSI.setText(myContact.getMMSI().toString());
            }
        } catch (Exception e) {
            Main.log.writelog("Error showing contacts info.", e, true);
        }
    }
    
    /**
     * Save the edited data, called when ok is hit.
     */
    private void UpdateContactObject(){
        try {
            if (myContact != null) {
                myContact.setFirstName(this.txtFirstName.getText().toString());
                myContact.setLastName(this.txtLastName.getText().toString());
                myContact.setNickname(this.txtNickname.getText().toString());
                myContact.setEmail(this.txtEmail.getText().toString());
                myContact.setHamCallsign(this.txtHamCallsign.getText().toString());
                myContact.setOtherCallsign(this.txtOtherCallsign.getText().toString());
                myContact.setMMSI(this.txtMMSI.getText().toString());
                myContact.setMobilePhone(this.txtMobile.getText().toString());
                myContact.setPhone(this.txtPhone.getText().toString());
                myContact.setNotes(this.txtNotes.getText().toString());
            }
        } catch (Exception e) {
            Main.log.writelog("Error updating contact info object. Could not save edited data.", e, true);
        }
    }
    
    public contact getMyContact() {
        return myContact;
    }

    public void setMyContact(contact myContact) {
        this.myContact = myContact;
        DisplayContact();
    }

    /**
     * True if ok was pressed, false otherwise
     * @return 
     */
    public boolean isExitstatus() {
        return exitstatus;
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bCancel;
    private javax.swing.JButton bOk;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel lblEmail;
    private javax.swing.JLabel lblFirstName;
    private javax.swing.JLabel lblLastName;
    private javax.swing.JLabel lblNickname;
    private javax.swing.JLabel lblOtherCall;
    private javax.swing.JPanel pBottom;
    private javax.swing.JPanel pMain;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtFirstName;
    private javax.swing.JTextField txtHamCallsign;
    private javax.swing.JTextField txtLastName;
    private javax.swing.JTextField txtMMSI;
    private javax.swing.JTextField txtMobile;
    private javax.swing.JTextField txtNickname;
    private javax.swing.JTextField txtNotes;
    private javax.swing.JTextField txtOtherCallsign;
    private javax.swing.JTextField txtPhone;
    // End of variables declaration//GEN-END:variables
}
