/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package javapskmail;

import java.util.Locale;
import java.util.ResourceBundle;

/**
 *
 * @author jdouyere
 */
public class OptionsDialogSms extends javax.swing.JDialog {

    private static final ResourceBundle optionsdialog = ResourceBundle.getBundle("javapskmail/optionsdialog");
    private OptionsDialog optionDialogRef;
    
    
    public void SetBackReference(OptionsDialog optionDialogRef) {
        this.optionDialogRef = optionDialogRef;
    }
    
    //Presets value from preference dialog
    public void setValues(String txtSmsEmailGatewayDomain,
            String jSpinnerSendCellNumAs,
            String txtGatewayISOCountryCode,
            String jTextDeleteUpTo,
            String jCheckBoxDeleteWholeLine,
            String jTextDeleteFrom) {
        
        this.txtSmsEmailGatewayDomain.setText(txtSmsEmailGatewayDomain);
        this.jSpinnerSendCellNumAs.setValue(jSpinnerSendCellNumAs);
        this.txtGatewayISOCountryCode.setText(txtGatewayISOCountryCode);
        this.jTextDeleteUpTo.setText(jTextDeleteUpTo);
        this.jCheckBoxDeleteWholeLine.setSelected(jCheckBoxDeleteWholeLine.equals("yes"));
        this.jTextDeleteFrom.setText(jTextDeleteFrom);
    }
    
    
    /**
     * Creates new form SmsConfigDialog
     */
    public OptionsDialogSms(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        jCheckBoxDeleteWholeLine = new javax.swing.JCheckBox();
        jTextDeleteFrom = new javax.swing.JTextField();
        jTextDeleteUpTo = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabelDeleteWholeLine = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        txtGatewayISOCountryCode = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        txtSmsEmailGatewayDomain = new javax.swing.JTextField();
        jSpinnerSendCellNumAs = new javax.swing.JSpinner();
        jButtonOk = new javax.swing.JButton();
        jButtonCancel = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jCBoxProviderWizard = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle(optionsdialog.getString("SMSGATEWAYCONFIGTITLE")); // NOI18N
        setMinimumSize(new java.awt.Dimension(500, 340));
        setPreferredSize(new java.awt.Dimension(500, 340));

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(optionsdialog.getString("CONFIGSMSPANEL1TITLE"))); // NOI18N
        jPanel1.setPreferredSize(new java.awt.Dimension(458, 178));
        jPanel1.setLayout(new java.awt.GridBagLayout());

        jCheckBoxDeleteWholeLine.setText(optionsdialog.getString("DELETEWHOLELINE")); // NOI18N
        jCheckBoxDeleteWholeLine.setToolTipText(optionsdialog.getString("DELETEWHOLELINETIP")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 10, 0, 0);
        jPanel1.add(jCheckBoxDeleteWholeLine, gridBagConstraints);

        jTextDeleteFrom.setToolTipText(optionsdialog.getString("DELETERECEIVEDTEXTFROMTIP")); // NOI18N
        jTextDeleteFrom.setMinimumSize(new java.awt.Dimension(233, 27));
        jTextDeleteFrom.setPreferredSize(new java.awt.Dimension(233, 27));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 15, 0, 0);
        jPanel1.add(jTextDeleteFrom, gridBagConstraints);

        jTextDeleteUpTo.setToolTipText(optionsdialog.getString("DELETERECEIVEDTEXTUPTOTIP")); // NOI18N
        jTextDeleteUpTo.setMinimumSize(new java.awt.Dimension(233, 27));
        jTextDeleteUpTo.setName(""); // NOI18N
        jTextDeleteUpTo.setPreferredSize(new java.awt.Dimension(233, 27));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 15, 0, 0);
        jPanel1.add(jTextDeleteUpTo, gridBagConstraints);

        jLabel4.setText(optionsdialog.getString("DELETERECEIVEDTEXTFROM")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(11, 0, 0, 0);
        jPanel1.add(jLabel4, gridBagConstraints);

        jLabelDeleteWholeLine.setText(optionsdialog.getString("DELETEWHOLELINE")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(8, 0, 0, 0);
        jPanel1.add(jLabelDeleteWholeLine, gridBagConstraints);

        jLabel2.setText(optionsdialog.getString("DELETERECEIVEDTEXTUPTO")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(11, 0, 0, 0);
        jPanel1.add(jLabel2, gridBagConstraints);

        jLabel1.setText(optionsdialog.getString("SENDNUMBERAS")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(9, 0, 0, 0);
        jPanel1.add(jLabel1, gridBagConstraints);

        txtGatewayISOCountryCode.setToolTipText(optionsdialog.getString("ISOCOUNTRYCODETIP")); // NOI18N
        txtGatewayISOCountryCode.setMinimumSize(new java.awt.Dimension(40, 27));
        txtGatewayISOCountryCode.setPreferredSize(new java.awt.Dimension(40, 27));
        txtGatewayISOCountryCode.setRequestFocusEnabled(false);
        txtGatewayISOCountryCode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtGatewayISOCountryCodeActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 15, 0, 0);
        jPanel1.add(txtGatewayISOCountryCode, gridBagConstraints);

        jLabel8.setText("ISO Country code");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(11, 0, 0, 0);
        jPanel1.add(jLabel8, gridBagConstraints);

        jLabel16.setText("SMS E-mail Gateway Domain");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 0, 0, 0);
        jPanel1.add(jLabel16, gridBagConstraints);

        txtSmsEmailGatewayDomain.setToolTipText(optionsdialog.getString("EMAIL SMS GATEWAY")); // NOI18N
        txtSmsEmailGatewayDomain.setMinimumSize(new java.awt.Dimension(100, 27));
        txtSmsEmailGatewayDomain.setPreferredSize(new java.awt.Dimension(233, 27));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 133;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 15, 0, 0);
        jPanel1.add(txtSmsEmailGatewayDomain, gridBagConstraints);

        jSpinnerSendCellNumAs.setModel(new javax.swing.SpinnerListModel(new String[] {"Local Number", "Int'l Number With + prefix", "Int'l Number Without + prefix"}));
        jSpinnerSendCellNumAs.setToolTipText(optionsdialog.getString("SENDCELLULARNUMBERASTIP")); // NOI18N
        jSpinnerSendCellNumAs.setMinimumSize(new java.awt.Dimension(233, 27));
        jSpinnerSendCellNumAs.setPreferredSize(new java.awt.Dimension(233, 27));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 15, 0, 0);
        jPanel1.add(jSpinnerSendCellNumAs, gridBagConstraints);

        jButtonOk.setText(optionsdialog.getString("OK")); // NOI18N
        jButtonOk.setMaximumSize(new java.awt.Dimension(81, 25));
        jButtonOk.setMinimumSize(new java.awt.Dimension(81, 25));
        jButtonOk.setPreferredSize(new java.awt.Dimension(81, 25));
        jButtonOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOkActionPerformed(evt);
            }
        });

        jButtonCancel.setText(optionsdialog.getString("CANCEL")); // NOI18N
        jButtonCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelActionPerformed(evt);
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel2.setLayout(new java.awt.GridBagLayout());

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel5.setText(optionsdialog.getString("SELECTWIZARD")); // NOI18N
        jLabel5.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel2.add(jLabel5, gridBagConstraints);

        jCBoxProviderWizard.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", "SMS Global", "Clicksend", "SMS Broadcast - AU" }));
        jCBoxProviderWizard.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCBoxProviderWizardActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        jPanel2.add(jCBoxProviderWizard, gridBagConstraints);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButtonOk, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonCancel))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 477, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 1, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonOk, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonCancel))
                .addContainerGap(36, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtGatewayISOCountryCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtGatewayISOCountryCodeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtGatewayISOCountryCodeActionPerformed

    private void jButtonOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOkActionPerformed
        // TODO add your handling code here:
        optionDialogRef.saveSmsConfig(txtSmsEmailGatewayDomain.getText(),
                jSpinnerSendCellNumAs.getValue().toString(),
                txtGatewayISOCountryCode.getText(),
                jTextDeleteUpTo.getText(),
                jCheckBoxDeleteWholeLine.isSelected() ? "yes" : "no",
                jTextDeleteFrom.getText());
                this.setVisible(false);
    }//GEN-LAST:event_jButtonOkActionPerformed

    private void jButtonCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
    }//GEN-LAST:event_jButtonCancelActionPerformed

    private void jCBoxProviderWizardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCBoxProviderWizardActionPerformed
        //Try via the Locale set on this computer as a last resort
        Locale currentLocale = Locale.getDefault();
        String countryCode = currentLocale.getCountry();

        //Prefill fields with "wizard" data
        switch (jCBoxProviderWizard.getSelectedIndex()) {

            case 1: //SMS Global
                this.txtSmsEmailGatewayDomain.setText("email.smsglobal.com");
                this.jSpinnerSendCellNumAs.setValue("Int'l Number Without + prefix");
                this.txtGatewayISOCountryCode.setText(countryCode);
                this.jTextDeleteUpTo.setText("MESSAGE: ");
                this.jCheckBoxDeleteWholeLine.setSelected(false);
                this.jTextDeleteFrom.setText("DATE:");
                break;
            case 2: //Clicksend
                this.txtSmsEmailGatewayDomain.setText("sms.clicksend.com");
                this.jSpinnerSendCellNumAs.setValue("Int'l Number With + prefix");
                this.txtGatewayISOCountryCode.setText(countryCode);
                this.jTextDeleteUpTo.setText("You've received a reply from");
                this.jCheckBoxDeleteWholeLine.setSelected(true);
                this.jTextDeleteFrom.setText("Original Message");
                break;
            case 3: //SMS Broadcast Australia
                this.txtSmsEmailGatewayDomain.setText("e2s.smsbroadcast.com.au");
                this.jSpinnerSendCellNumAs.setValue("Int'l Number With + prefix");
                this.txtGatewayISOCountryCode.setText(countryCode);
                this.jTextDeleteUpTo.setText("");
                this.jCheckBoxDeleteWholeLine.setSelected(false);
                this.jTextDeleteFrom.setText("----Original Message");
                break;
            default:
                break;
        }
    }//GEN-LAST:event_jCBoxProviderWizardActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(OptionsDialogSms.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(OptionsDialogSms.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(OptionsDialogSms.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(OptionsDialogSms.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                OptionsDialogSms dialog = new OptionsDialogSms(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonCancel;
    private javax.swing.JButton jButtonOk;
    private javax.swing.JComboBox<String> jCBoxProviderWizard;
    private javax.swing.JCheckBox jCheckBoxDeleteWholeLine;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabelDeleteWholeLine;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JSpinner jSpinnerSendCellNumAs;
    private javax.swing.JTextField jTextDeleteFrom;
    private javax.swing.JTextField jTextDeleteUpTo;
    private javax.swing.JTextField txtGatewayISOCountryCode;
    private javax.swing.JTextField txtSmsEmailGatewayDomain;
    // End of variables declaration//GEN-END:variables
}
