/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * frmPosConverter.java
 *
 * Created on 2011-feb-06, 12:17:28
 */

package javapskmail;

import java.text.NumberFormat;      // For masked edit field for position
import java.util.Locale;            // For format in masked edit
import java.text.DecimalFormat;

/**
 *
 * @author per
 */
public class PosFormatConv extends javax.swing.JDialog {
    boolean usedata=false;


/** Creates new form frmPosConverter */
    public PosFormatConv(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        pnlBottom = new javax.swing.JPanel();
        bOk = new javax.swing.JButton();
        bCancel = new javax.swing.JButton();
        pnlMain = new javax.swing.JPanel();
        lblLatitude = new javax.swing.JLabel();
        lblLongitude = new javax.swing.JLabel();
        lblDegrees = new javax.swing.JLabel();
        lblMinutes = new javax.swing.JLabel();
        // Setup masked boxes
        NumberFormat nfLatd;
        nfLatd = NumberFormat.getInstance(Locale.US);
        nfLatd.setMinimumFractionDigits(0);
        nfLatd.setMaximumFractionDigits(0);
        nfLatd.setMaximumIntegerDigits(2);
        nfLatd.setMinimumIntegerDigits(1);
        txtLatDegree = new javax.swing.JFormattedTextField(nfLatd);
        // Setup masked boxes
        NumberFormat nfLond;
        nfLond = NumberFormat.getInstance(Locale.US);
        nfLond.setMinimumFractionDigits(0);
        nfLond.setMaximumFractionDigits(0);
        nfLond.setMaximumIntegerDigits(3);
        nfLond.setMinimumIntegerDigits(1);
        txtLongDegree = new javax.swing.JFormattedTextField(nfLond);
        // Setup masked boxes
        NumberFormat nfLon;
        nfLon = NumberFormat.getInstance(Locale.US);
        nfLon.setMinimumFractionDigits(1);
        nfLon.setMaximumFractionDigits(4);
        nfLon.setMaximumIntegerDigits(2);
        nfLon.setMinimumIntegerDigits(2);
        txtLonMin = new javax.swing.JFormattedTextField(nfLon);
        // Setup masked boxes
        NumberFormat nfLat;
        nfLat = NumberFormat.getInstance(Locale.US);
        nfLat.setMinimumFractionDigits(1);
        nfLat.setMaximumFractionDigits(4);
        nfLat.setMaximumIntegerDigits(2);
        nfLat.setMinimumIntegerDigits(2);
        txtLatMin = new javax.swing.JFormattedTextField(nfLat);
        bConvert = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        bClear = new javax.swing.JButton();
        lDecDegrees = new javax.swing.JLabel();
        txtLatDecimal = new javax.swing.JFormattedTextField();
        txtLonDecimal = new javax.swing.JFormattedTextField();
        spnLatHemi = new javax.swing.JSpinner();
        spnLongHemi = new javax.swing.JSpinner();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Position converter");
        setMinimumSize(new java.awt.Dimension(200, 100));
        setResizable(false);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        pnlBottom.setMinimumSize(new java.awt.Dimension(200, 40));
        pnlBottom.setPreferredSize(new java.awt.Dimension(250, 40));
        pnlBottom.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        bOk.setText("OK");
        bOk.setMaximumSize(new java.awt.Dimension(80, 30));
        bOk.setMinimumSize(new java.awt.Dimension(70, 30));
        bOk.setPreferredSize(new java.awt.Dimension(70, 30));
        bOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bOkActionPerformed(evt);
            }
        });
        pnlBottom.add(bOk);

        bCancel.setText("Cancel");
        bCancel.setMaximumSize(new java.awt.Dimension(80, 30));
        bCancel.setMinimumSize(new java.awt.Dimension(70, 30));
        bCancel.setPreferredSize(new java.awt.Dimension(70, 30));
        bCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bCancelActionPerformed(evt);
            }
        });
        pnlBottom.add(bCancel);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.1;
        getContentPane().add(pnlBottom, gridBagConstraints);

        pnlMain.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        pnlMain.setMaximumSize(new java.awt.Dimension(5000, 3000));
        pnlMain.setMinimumSize(new java.awt.Dimension(200, 180));
        pnlMain.setPreferredSize(new java.awt.Dimension(271, 220));
        pnlMain.setLayout(new java.awt.GridBagLayout());

        lblLatitude.setText("Latitude");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        pnlMain.add(lblLatitude, gridBagConstraints);

        lblLongitude.setText("Longitude");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        pnlMain.add(lblLongitude, gridBagConstraints);

        lblDegrees.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblDegrees.setText("Degrees");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);
        pnlMain.add(lblDegrees, gridBagConstraints);

        lblMinutes.setText("Minutes");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 5);
        pnlMain.add(lblMinutes, gridBagConstraints);

        txtLatDegree.setText("59");
        txtLatDegree.setMinimumSize(new java.awt.Dimension(40, 28));
        txtLatDegree.setPreferredSize(new java.awt.Dimension(45, 28));
        txtLatDegree.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtLatDegreeFocusLost(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        pnlMain.add(txtLatDegree, gridBagConstraints);

        txtLongDegree.setText("018");
        txtLongDegree.setMinimumSize(new java.awt.Dimension(40, 28));
        txtLongDegree.setPreferredSize(new java.awt.Dimension(45, 28));
        txtLongDegree.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtLongDegreeFocusLost(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        pnlMain.add(txtLongDegree, gridBagConstraints);

        txtLonMin.setText("28.9");
        txtLonMin.setMaximumSize(new java.awt.Dimension(100, 28));
        txtLonMin.setMinimumSize(new java.awt.Dimension(50, 28));
        txtLonMin.setPreferredSize(new java.awt.Dimension(60, 28));
        txtLonMin.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtLonMinFocusLost(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        pnlMain.add(txtLonMin, gridBagConstraints);

        txtLatMin.setText("13.2");
        txtLatMin.setMaximumSize(new java.awt.Dimension(100, 28));
        txtLatMin.setMinimumSize(new java.awt.Dimension(50, 28));
        txtLatMin.setPreferredSize(new java.awt.Dimension(60, 28));
        txtLatMin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtLatMinActionPerformed(evt);
            }
        });
        txtLatMin.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtLatMinFocusLost(evt);
            }
        });
        txtLatMin.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtLatMinKeyReleased(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        pnlMain.add(txtLatMin, gridBagConstraints);

        bConvert.setText("Convert");
        bConvert.setMaximumSize(new java.awt.Dimension(68, 30));
        bConvert.setMinimumSize(new java.awt.Dimension(68, 30));
        bConvert.setPreferredSize(new java.awt.Dimension(68, 30));
        bConvert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bConvertActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 5, 1);
        pnlMain.add(bConvert, gridBagConstraints);

        jLabel5.setText("Latitude");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        pnlMain.add(jLabel5, gridBagConstraints);

        jLabel6.setText("Longitude");
        jLabel6.setMinimumSize(new java.awt.Dimension(60, 18));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.ipadx = 14;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 5, 0);
        pnlMain.add(jLabel6, gridBagConstraints);

        bClear.setText("Clear");
        bClear.setMaximumSize(new java.awt.Dimension(68, 30));
        bClear.setMinimumSize(new java.awt.Dimension(68, 30));
        bClear.setPreferredSize(new java.awt.Dimension(68, 30));
        bClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bClearActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 1, 5, 0);
        pnlMain.add(bClear, gridBagConstraints);

        lDecDegrees.setText("Decimal degrees");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 2;
        pnlMain.add(lDecDegrees, gridBagConstraints);

        txtLatDecimal.setEditable(false);
        txtLatDecimal.setMinimumSize(new java.awt.Dimension(100, 28));
        txtLatDecimal.setPreferredSize(new java.awt.Dimension(141, 28));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        pnlMain.add(txtLatDecimal, gridBagConstraints);

        txtLonDecimal.setEditable(false);
        txtLonDecimal.setMinimumSize(new java.awt.Dimension(100, 28));
        txtLonDecimal.setPreferredSize(new java.awt.Dimension(141, 28));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        pnlMain.add(txtLonDecimal, gridBagConstraints);

        spnLatHemi.setModel(new javax.swing.SpinnerListModel(new String[] {"N", "S"}));
        spnLatHemi.setMinimumSize(new java.awt.Dimension(45, 28));
        spnLatHemi.setPreferredSize(new java.awt.Dimension(45, 28));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        pnlMain.add(spnLatHemi, gridBagConstraints);

        spnLongHemi.setModel(new javax.swing.SpinnerListModel(new String[] {"E", "W"}));
        spnLongHemi.setMinimumSize(new java.awt.Dimension(45, 28));
        spnLongHemi.setPreferredSize(new java.awt.Dimension(45, 28));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        pnlMain.add(spnLongHemi, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        getContentPane().add(pnlMain, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents
    public String getTxtLatDecimal() {
        return txtLatDecimal.getText().toString();
    }

    public String getTxtLonDecimal() {
        return txtLonDecimal.getText().toString();
    }

    public boolean isUsedata() {
        return usedata;
    }

    /**
     * Clear all labels
     * @param evt
     */
    private void bCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bCancelActionPerformed
        this.setVisible(false);
    }//GEN-LAST:event_bCancelActionPerformed

    /**
     * Convert what is on the textboxes, if possible that is
     * @param evt
     */
    private void bConvertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bConvertActionPerformed
        // Local variables
        String myLat, myLon;
        try {
            myLat=ConvertLatitude(spnLatHemi.getValue().toString(), txtLatDegree.getText().toString(), txtLatMin.getText().toString());
            myLon=ConvertLongitude(spnLongHemi.getValue().toString(), txtLongDegree.getText().toString(), txtLonMin.getText().toString());
            txtLatDecimal.setText(myLat);
            txtLonDecimal.setText(myLon);
        } catch (Exception ex) {
            // Handle the error, display the problem!
            Main.log.writelog("Problem with that format ", ex, true);
        }
    }//GEN-LAST:event_bConvertActionPerformed

    /**
     * Have the format fixed before its entered as decimal latitude
     * @param f
     */
    private void setLatitudeFormatted(Float f){
        
    }

    private void bOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bOkActionPerformed
        // This data can be used
        usedata = true;
        this.setVisible(false);
    }//GEN-LAST:event_bOkActionPerformed

    private void bClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bClearActionPerformed
        this.txtLatDecimal.setText("");
        this.txtLatDegree.setText("");
        this.txtLonDecimal.setText("");
        this.txtLonMin.setText("");
        this.txtLatMin.setText("");
        this.txtLongDegree.setText("");
    }//GEN-LAST:event_bClearActionPerformed

    private void txtLongDegreeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtLongDegreeFocusLost
        int n = Integer.parseInt(this.txtLongDegree.getText().toString());
        if (n>179){
          txtLongDegree.setText("179");
        }
    }//GEN-LAST:event_txtLongDegreeFocusLost

    private void txtLatDegreeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtLatDegreeFocusLost
        int n = Integer.parseInt(this.txtLatDegree.getText().toString());
        if (n>89){
          txtLatDegree.setText("89");
        }
    }//GEN-LAST:event_txtLatDegreeFocusLost

    // Make sure its not too big
    private void txtLatMinFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtLatMinFocusLost
        float f = Float.parseFloat(this.txtLatMin.getText().toString());
        if (f>60){
          txtLatMin.setText("59.9");
        }
    }//GEN-LAST:event_txtLatMinFocusLost

    private void txtLonMinFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtLonMinFocusLost
        float f = Float.parseFloat(this.txtLonMin.getText().toString());
        if (f>60){
          txtLonMin.setText("59.9");
        }
    }//GEN-LAST:event_txtLonMinFocusLost

    /**
     * Get rid of bad characters
     * @param evt
     */
    private void txtLatMinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtLatMinActionPerformed

    }//GEN-LAST:event_txtLatMinActionPerformed

    private void txtLatMinKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtLatMinKeyReleased
        // Get rid of strange characters
        String txt = this.txtLatMin.getText().toString();
        txt.replace(",", ".");
        txtLatMin.setText(txt);
    }//GEN-LAST:event_txtLatMinKeyReleased

        /**
     * Convert GPS latitude format, ddmm.mmm, into decimal format for APRS
     * @param Decimal the latitude from the gps
     * @return  A decimal latitude
     */
    private String ConvertLatitude(String hemi, String deg, String min){
        Float myfloat;  // Work with this
        Float result;   // Put the finished one here
        String myLatitude="";

        // Get the degrees
        result = new Float(deg).floatValue();
        // Get only the minutes
        myfloat = new Float(min).floatValue();
        // Convert to decimal fraction of degrees
        myfloat = myfloat/60;
        // Put it back together
        result = result+myfloat;
        // Make sure the format is proper
        DecimalFormat latform = new DecimalFormat("00.0000");
        myLatitude = latform.format(result);
        // Make sure there is a period in there
        myLatitude = myLatitude.replace(",", ".");

        // If its in the south then its negative
        if (hemi.equals("S")) myLatitude="-"+myLatitude;

        // Return the complete value
        return myLatitude;
    }

    /**
     * Convert ddmm position format into clean decimal for APRS
     * @param inlon
     * @param hemi
     * @return
     */
    private String ConvertLongitude(String hemi, String deg, String min){
        Float myfloat;  // Work with this
        Float result;   // Put the finished one here
        String myLongitude="";

        // Get the degrees
        result = new Float(deg).floatValue();
        // Get only the minutes
        myfloat = new Float(min).floatValue();
        // Convert to decimal fraction of degrees
        myfloat = myfloat/60;
        // Put it back together
        result = result+myfloat;
        // Make sure the format is ok
        DecimalFormat lonform = new DecimalFormat("000.0000");
        myLongitude = lonform.format(result);
        // Make sure there is a period in there
        myLongitude = myLongitude.replace(",", ".");

        // Add a zero if less than 100
        String mypoint = myLongitude.substring(2, 3);
        if (mypoint.equals(".")){
            myLongitude = "0"+myLongitude;
        }

        // If its west then its negative
        if (hemi.equals("W")) myLongitude="-"+myLongitude;

        // Return the complete value
        return myLongitude;
    }

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                PosFormatConv dialog = new PosFormatConv(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bCancel;
    private javax.swing.JButton bClear;
    private javax.swing.JButton bConvert;
    private javax.swing.JButton bOk;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel lDecDegrees;
    private javax.swing.JLabel lblDegrees;
    private javax.swing.JLabel lblLatitude;
    private javax.swing.JLabel lblLongitude;
    private javax.swing.JLabel lblMinutes;
    private javax.swing.JPanel pnlBottom;
    private javax.swing.JPanel pnlMain;
    private javax.swing.JSpinner spnLatHemi;
    private javax.swing.JSpinner spnLongHemi;
    private javax.swing.JFormattedTextField txtLatDecimal;
    private javax.swing.JFormattedTextField txtLatDegree;
    private javax.swing.JFormattedTextField txtLatMin;
    private javax.swing.JFormattedTextField txtLonDecimal;
    private javax.swing.JFormattedTextField txtLonMin;
    private javax.swing.JFormattedTextField txtLongDegree;
    // End of variables declaration//GEN-END:variables

}
